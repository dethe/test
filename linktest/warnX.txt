file: warnX.txt
host: testblog.livingcode.org
date: Sat, 13 Mar 2010 10:32:18 (local)
Linklint version: 2.3.5

#------------------------------------------------------------
# warn   34 warnings (cross referenced)
#------------------------------------------------------------
// converted to / in http://developer.apple.com/documentation/Cocoa/Reference/ApplicationKit/ObjC_classic/Classes/NSOutlineView.html#//apple_ref/doc/uid/20000110-BABHDHAE%22
    occurred in
    /entries/2005-05-03_happiness-is-a-warm-tiger/

// converted to / in http://developer.apple.com/documentation/Cocoa/Reference/ApplicationKit/ObjC_classic/Classes/NSTreeController.html#//apple_ref/occ/cl/NSTreeController
    occurred in
    /entries/2005-05-03_happiness-is-a-warm-tiger/

// converted to / in http://developer.apple.com/documentation/GraphicsImaging/Conceptual/drawingwithquartz2d/dq_python/chapter_17_section_1.html#//apple_ref/doc/uid/TP30001066-CH218-TPXREF101
    occurred in
    /entries/2008-03-20_drawing-hexmaps/

// converted to / in http://developer.apple.com/documentation/QuickTime/Reference/QTCocoaObjCKit/index.html#//apple_ref/doc/uid/TP40001164
    occurred in
    /entries/2005-05-03_happiness-is-a-warm-tiger/

// converted to / in http://web.archive.org/web/20070625030114/http://www.cl.cam.ac.uk/~dlg10/
    occurred in
    /entries/2008-05-29_in-the-future-all-websites-will-be-handwritten/

unquoted "<" in <0){ // recursive 
    occurred in
    /projects/processing/

unquoted "<" in <135) {
    overRightBut
    occurred in
    /projects/processing/

unquoted "<" in <angs.length; i++){
  fil
    occurred in
    /projects/processing/

unquoted "<" in <height/unit; i++) {
    fo
    occurred in
    /projects/processing/

unquoted "<" in <height/unit; j++) {
      
    occurred in
    /projects/processing/

unquoted "<" in <height; i++) {
  for(int j
    occurred in
    /projects/processing/

unquoted "<" in <height; i+=2) {
  for(int 
    occurred in
    /projects/processing/

unquoted "<" in <height; i+=20) {
	 fill(0)
    occurred in
    /projects/processing/

unquoted "<" in <margin; i++) {
  for(int j
    occurred in
    /projects/processing/

unquoted "<" in <margin; j++) {
    char le
    occurred in
    /projects/processing/

unquoted "<" in <num; i++) {
      float
    occurred in
    /projects/processing/

unquoted "<" in <num; i++) {
    ellipse
    occurred in
    /projects/processing/

unquoted "<" in <num; i++) {
    fill(i*
    occurred in
    /projects/processing/

unquoted "<" in <num; i++) {
    mx[i-1]
    occurred in
    /projects/processing/

unquoted "<" in <points; i++){
    px[i] = 
    occurred in
    /projects/processing/

unquoted "<" in <pts; i++) {
  px = x+co
    occurred in
    /projects/processing/

unquoted "<" in <pts; i++){
    if (i==p
    occurred in
    /projects/processing/

unquoted "<" in <scale; i++) {
    colorMo
    occurred in
    /projects/processing/

unquoted "<" in <steps; j++){
      color[
    occurred in
    /projects/processing/
    /projects/processing/

unquoted "<" in <t; i++) {
      rect(
    occurred in
    /projects/processing/

unquoted "<" in <width; i++) {
    stroke(
    occurred in
    /projects/processing/

unquoted "<" in <width; i++) {
   vertex(i
    occurred in
    /projects/processing/
    /projects/processing/
    /projects/processing/
    /projects/processing/

unquoted "<" in <width; i++) {
  float rat
    occurred in
    /projects/processing/

unquoted "<" in <width; i++) {
  stroke(25
    occurred in
    /projects/processing/

unquoted "<" in <width; i++) {
  stroke(co
    occurred in
    /projects/processing/
    /projects/processing/

unquoted "<" in <width; i++) { 
    xvals[
    occurred in
    /projects/processing/

unquoted "<" in <width; i+=10) {
  // If '
    occurred in
    /projects/processing/

unquoted "<" in <width; j++) {
    float d
    occurred in
    /projects/processing/

unquoted "<" in <width; j+=2) {
    stroke
    occurred in
    /projects/processing/

